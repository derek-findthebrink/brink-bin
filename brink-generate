#!/usr/bin/env coffee
p = require "commander"
nodepath = require "path"
fs = require "fs"
async = require "async"

traverse = require "./modules/traverse"

args = process.argv
p
	.option("-o, --out <path>", "specify an outpath, defaults to './brink.json'")
	.parse(args)

input = {}
input.out = p.out || "brink.json"

# should output in a js-parsable format -> e.g. pm2 ecosystem

# generate template -> scaffolding for all of the other commands
template = require "./templates/brink-json"

writeConfig = (data, path, cb)->
	final = JSON.stringify(data, null, "\t")
	fs.writeFile(path, final, {encoding: "utf8"}, (err)->
		if err
			return cb(err)
		return cb(null, data, path)
		)

createTemplate = (path, file, pckg, brink, cb)->
	i = input
	# match input -o with p
	brinkPath = path + "/" + i.out

	t = template
	return cb(null, t, brinkPath)

async.waterfall([
	# find project root
	traverse
	# check if brink.json exists
	# questions for interactive shoud all have default opt as defaults
	createTemplate
	# output brink.json to requested path
	writeConfig
	# add brink: <path> to package.json
	], (err, data, p)->
		if err
			return console.error err
		console.log "success!", "wrote file:", p
		)
